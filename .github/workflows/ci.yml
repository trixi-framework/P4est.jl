name: CI

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'LICENSE.md'
      - 'README.md'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
  pull_request:
    paths-ignore:
      - 'LICENSE.md'
      - 'README.md'
      - '.github/workflows/CompatHelper.yml'
      - '.github/workflows/TagBot.yml'
  workflow_dispatch:

jobs:
  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: ${{ matrix.os }} - Julia ${{ matrix.version }} - ${{ matrix.arch }} - ${{ github.event_name }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        version:
          - '1.6'
          # - 'nightly'
        os:
          - ubuntu-latest
          # - macos-latest
          # - windows-latest
        arch:
          - x64
        p4est_test:
          - P4EST_JLL_PRE_GENERATED_BINDINGS
          - P4EST_JLL_NON_MPI
          - P4EST_CUSTOM_NON_MPI
          - P4EST_CUSTOM_USES_MPI
        # Only one additional test on macOS and Windows, since custom p4est installations
        # do not yet work under other OSes
        include:
          - version: '1.6'
            os: macos-latest
            arch: x86
            p4est_test: P4EST_JLL_PRE_GENERATED_BINDINGS
          - version: '1.6'
            os: windows-latest
            arch: x86
            p4est_test: P4EST_JLL_PRE_GENERATED_BINDINGS
    steps:
      - uses: actions/checkout@v2
      - name: Install custom p4est libraries for testing
        run: ./.ci_install_p4est.sh
        env:
          P4EST_TEST: ${{ matrix.p4est_test }}
      - uses: julia-actions/setup-julia@v1
        with:
          version: ${{ matrix.version }}
          arch: ${{ matrix.arch }}
      - uses: actions/cache@v1
        env:
          cache-name: cache-artifacts
        with:
          path: ~/.julia/artifacts
          key: ${{ runner.os }}-test-${{ env.cache-name }}-${{ hashFiles('**/Project.toml') }}
          restore-keys: |
            ${{ runner.os }}-test-${{ env.cache-name }}-
            ${{ runner.os }}-test-
            ${{ runner.os }}-
      - uses: julia-actions/julia-buildpkg@v1
        env:
          PYTHON: ""
          P4EST_TEST: ${{ matrix.p4est_test }}
      - uses: julia-actions/julia-runtest@v1
        env:
          PYTHON: ""
          P4EST_TEST: ${{ matrix.p4est_test }}
      - uses: julia-actions/julia-processcoverage@v1
      - uses: coverallsapp/github-action@master
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          flag-name: run-${{ matrix.os }}-${{ matrix.version }}-${{ matrix.arch }}
          parallel: true
          path-to-lcov: ./lcov.info
      - uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # not required for public repos
          files: ./lcov.info # optional
          flags: unittests # optional
          name: codecov-umbrella # optional
          fail_ci_if_error: true # optional (default = false)
          # verbose: true # optional (default = false)

  finish:
    needs: test
    runs-on: ubuntu-latest
    steps:
    - name: Coveralls Finished
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        parallel-finished: true
